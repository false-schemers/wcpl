(module $stat
  (import "env" "__stack_pointer" (global $env:__stack_pointer (mut i32)))
  (import "env" "__linear_memory" (memory $env:__linear_memory 0))
  (import "wasi_snapshot_preview1" "fd_filestat_get" (func $wasi_snapshot_preview1:fd_filestat_get (param i32) (param i32) (result i32)))
  (import "wasi_snapshot_preview1" "path_create_directory" (func $wasi_snapshot_preview1:path_create_directory (param i32) (param i32) (param i32) (result i32)))
  (import "wasi_snapshot_preview1" "path_filestat_get" (func $wasi_snapshot_preview1:path_filestat_get (param i32) (param i32) (param i32) (param i32) (param i32) (result i32)))
  (import "string" "strlen" (func $string:strlen (param i32) (result i32)))
  (import "errno" "errno" (global $errno:errno i32))
  (import "fcntl" "find_relpath" (func $fcntl:find_relpath (param i32) (param i32) (result i32)))
  (func $stat:timestamp_to_timespec
    (param $timestamp i64) (param $pt i32) (param $pns i32) 
    (local $i1$ i32) (local $i2$ i32) 
    local.get $pt
    local.tee $i1$
    local.get $timestamp
    i32.const 1000000000
    i64.extend_i32_s
    i64.div_u
    i64.store offset=0 align=8
    local.get $pns
    local.tee $i2$
    local.get $timestamp
    i32.const 1000000000
    i64.extend_i32_s
    i64.rem_u
    i32.wrap_i64
    i32.store offset=0 align=4
  )
  (func $stat:to_public_stat
    (param $in i32) (param $out i32) 
    (local $i1$ i32) (local $i2$ i32) (local $i3$ i32) (local $i4$ i32) (local $i5$ i32) (local $i6$ i32) (local $i7$ i32) (local $i8$ i32) (local $i9$ i32) (local $i10$ i32) 
    local.get $out
    local.tee $i1$
    local.get $in
    i64.load offset=0 align=8
    i64.store offset=0 align=8
    local.get $out
    i32.const 8
    i32.add
    local.tee $i2$
    local.get $in
    i64.load offset=8 align=8
    i64.store offset=0 align=8
    local.get $out
    i32.const 16
    i32.add
    local.tee $i3$
    local.get $in
    i64.load offset=24 align=8
    i64.store offset=0 align=8
    local.get $out
    i32.const 32
    i32.add
    local.tee $i4$
    local.get $in
    i64.load offset=32 align=8
    i64.store offset=0 align=8
    local.get $in
    i64.load offset=40 align=8
    local.get $out
    i32.const 40
    i32.add
    local.get $out
    i32.const 64
    i32.add
    call $stat:timestamp_to_timespec
    local.get $in
    i64.load offset=48 align=8
    local.get $out
    i32.const 48
    i32.add
    local.get $out
    i32.const 68
    i32.add
    call $stat:timestamp_to_timespec
    local.get $in
    i64.load offset=56 align=8
    local.get $out
    i32.const 56
    i32.add
    local.get $out
    i32.const 72
    i32.add
    call $stat:timestamp_to_timespec
    block $1$
    block $8$
    block $7$
    block $6$
    block $5$
    block $4$
    block $3$
    block $2$
    local.get $in
    i32.load8_u offset=16 align=1
    i32.const 1
    i32.sub
    br_table $2$ $3$ $4$ $5$ $6$ $7$ $8$ $1$
    end $2$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i5$
    local.get $i5$
    i32.load offset=0 align=4
    i32.const 24576
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $3$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i6$
    local.get $i6$
    i32.load offset=0 align=4
    i32.const 8192
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $4$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i7$
    local.get $i7$
    i32.load offset=0 align=4
    i32.const 16384
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $5$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i8$
    local.get $i8$
    i32.load offset=0 align=4
    i32.const 32768
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $6$
    end $7$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i9$
    local.get $i9$
    i32.load offset=0 align=4
    i32.const 49152
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $8$
    local.get $out
    i32.const 24
    i32.add
    local.tee $i10$
    local.get $i10$
    i32.load offset=0 align=4
    i32.const 40960
    i32.or
    i32.store offset=0 align=4
    br $1$
    end $1$
  )
  (func $stat:fstat (export "fstat")
    (param $fd i32) (param $ps i32) (result i32) 
    (local $error i32) (local $fp$ i32) 
    global.get $env:__stack_pointer
    global.get $env:__stack_pointer
    i32.const 64
    i32.sub
    global.set $env:__stack_pointer
    local.set $fp$
    local.get $fd
    local.get $fp$
    call $wasi_snapshot_preview1:fd_filestat_get
    local.tee $error
    i32.const 65535
    i32.and
    i32.const 0
    i32.ne
    if
    local.get $error
    i32.const 65535
    i32.and
    global.set $errno:errno
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const -1
    return
    end
    local.get $fp$
    local.get $ps
    call $stat:to_public_stat
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const 0
    return
  )
  (func $stat:fstatat (export "fstatat")
    (param $fd i32) (param $path i32) (param $ps i32) (param $atflag i32) (result i32) 
    (local $lflags i32) (local $error i32) (local $fp$ i32) 
    global.get $env:__stack_pointer
    global.get $env:__stack_pointer
    i32.const 64
    i32.sub
    global.set $env:__stack_pointer
    local.set $fp$
    i32.const 0
    local.set $lflags
    local.get $atflag
    i32.const 1
    i32.and
    i32.const 0
    i32.eq
    if
    local.get $lflags
    i32.const 1
    i32.or
    local.set $lflags
    end
    local.get $fd
    local.get $lflags
    local.get $path
    local.get $path
    call $string:strlen
    local.get $fp$
    call $wasi_snapshot_preview1:path_filestat_get
    local.tee $error
    i32.const 65535
    i32.and
    i32.const 0
    i32.ne
    if
    local.get $error
    i32.const 65535
    i32.and
    global.set $errno:errno
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const -1
    return
    end
    local.get $fp$
    local.get $ps
    call $stat:to_public_stat
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const 0
    return
  )
  (func $stat:stat (export "stat")
    (param $path i32) (param $ps i32) (result i32) 
    (local $dirfd i32) (local $fp$ i32) 
    global.get $env:__stack_pointer
    global.get $env:__stack_pointer
    i32.const 16
    i32.sub
    global.set $env:__stack_pointer
    local.set $fp$
    local.get $path
    local.get $fp$
    call $fcntl:find_relpath
    local.tee $dirfd
    i32.const -1
    i32.eq
    if
    i32.const 76
    global.set $errno:errno
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const -1
    return
    end
    local.get $dirfd
    local.get $fp$
    i32.load offset=0 align=4
    local.get $ps
    i32.const 0
    call $stat:fstatat
    drop
  )
  (func $stat:lstat (export "lstat")
    (param $path i32) (param $ps i32) (result i32) 
    (local $dirfd i32) (local $fp$ i32) 
    global.get $env:__stack_pointer
    global.get $env:__stack_pointer
    i32.const 16
    i32.sub
    global.set $env:__stack_pointer
    local.set $fp$
    local.get $path
    local.get $fp$
    call $fcntl:find_relpath
    local.tee $dirfd
    i32.const -1
    i32.eq
    if
    i32.const 76
    global.set $errno:errno
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const -1
    return
    end
    local.get $dirfd
    local.get $fp$
    i32.load offset=0 align=4
    local.get $ps
    i32.const 1
    call $stat:fstatat
    drop
  )
  (func $stat:mkdirat (export "mkdirat")
    (param $fd i32) (param $path i32) (param $mode i32) (result i32) 
    (local $error i32) 
    local.get $fd
    local.get $path
    local.get $path
    call $string:strlen
    call $wasi_snapshot_preview1:path_create_directory
    local.tee $error
    i32.const 65535
    i32.and
    i32.const 0
    i32.ne
    if
    local.get $error
    i32.const 65535
    i32.and
    global.set $errno:errno
    i32.const -1
    return
    end
    i32.const 0
    return
  )
  (func $stat:mkdir (export "mkdir")
    (param $path i32) (param $mode i32) (result i32) 
    (local $dirfd i32) (local $fp$ i32) 
    global.get $env:__stack_pointer
    global.get $env:__stack_pointer
    i32.const 16
    i32.sub
    global.set $env:__stack_pointer
    local.set $fp$
    local.get $path
    local.get $fp$
    call $fcntl:find_relpath
    local.tee $dirfd
    i32.const -1
    i32.eq
    if
    i32.const 76
    global.set $errno:errno
    local.get $fp$
    global.set $env:__stack_pointer
    i32.const -1
    return
    end
    local.get $fp$
    global.set $env:__stack_pointer
    local.get $dirfd
    local.get $fp$
    i32.load offset=0 align=4
    local.get $mode
    call $stat:mkdirat
    return
  )
)
